function drawRect(rc, s) {
   rc.rectangle(Number(s.x), Number(s.y), Number(s.size), Number(s.size), {
     roughness: s.roughness,
     bowing: s.bowing,
     fill: s.fill,
     fillStyle: s.fillstyle,
     hachureGap: 4,
     fillWeight: 0.5,
     stroke: s.color,
     strokeWidth: s.width
   });
}

function drawCirc(rc, s) {
   rc.circle(Number(s.x), Number(s.y), Number(s.size), {
     roughness: s.roughness,
     bowing: s.bowing,
     fill: s.fill,
     fillStyle: s.fillstyle,
     hachureGap: 4,
     fillWeight: 0.5,
     stroke: s.color,
     strokeWidth: s.width
   });
}

function drawHeart(rc,ctx,s){
  ctx.scale(s.size/100,s.size/100);
  ctx.translate(s.x*100/s.size,s.y*100/s.size);
  rc.path("M51.2 88.058q-1.5 0-2.5-1l-35.65-34.4q-1.65-1.35-4.25-4.65-2.65-3.3-4.4-6.15-1.7-2.8-3.05-6.9t-1.35-7.9q0-12.55 7.25-19.65t20.05-7.1q7.3-.05 13.7 4.25t10.2 8.1q12.5-12.5 23.9-12.35 12.8 0 20.05 7.1t7.25 19.7-13.1 25.65l-35.6 34.3q-1 1-2.5 1z",{
     roughness: s.roughness,
     bowing: s.bowing,
     fill: s.fill,
     fillStyle: s.fillstyle,
     hachureGap: 4,
     fillWeight: 0.5,
     stroke: s.color,
     strokeWidth: s.width});

  ctx.translate(-s.x*100/s.size,-s.y*100/s.size);
  ctx.scale(100/s.size,100/s.size);
}

function drawFire(rc,ctx,s){
  rc.circle(Number(s.x)+0.5*Number(s.size), Number(s.y)+0.5*Number(s.size), 1.3*Number(s.size), {
     roughness: s.roughness,
     bowing: s.bowing,
     fill: "white",
     fillStyle: "solid",
     stroke: s.color,
     strokeWidth: s.width
  });
  ctx.scale(s.size/100,s.size/100);
  ctx.translate(s.x*100/s.size,s.y*100/s.size);
  rc.path("M 89.285156 94.644531 L 89.285156 98.214844 C 89.285156 98.699219 89.109375 99.117188 88.753906 99.46875 C 88.402344 99.824219 87.984375 100 87.5 100 L 12.5 100 C 12.015625 100 11.597656 99.824219 11.246094 99.46875 C 10.890625 99.117188 10.714844 98.699219 10.714844 98.214844 L 10.714844 94.644531 C 10.714844 94.160156 10.890625 93.742188 11.246094 93.386719 C 11.597656 93.035156 12.015625 92.855469 12.5 92.855469 L 87.5 92.855469 C 87.984375 92.855469 88.402344 93.035156 88.753906 93.386719 C 89.109375 93.742188 89.285156 94.160156 89.285156 94.644531 Z M 75 35.714844 C 75 38.617188 74.542969 41.292969 73.632812 43.75 C 72.722656 46.207031 71.53125 48.296875 70.0625 50.027344 C 68.59375 51.757812 66.964844 53.394531 65.179688 54.9375 C 63.394531 56.484375 61.605469 57.925781 59.820312 59.261719 C 58.035156 60.601562 56.40625 61.941406 54.9375 63.28125 C 53.46875 64.621094 52.277344 66.136719 51.367188 67.828125 C 50.457031 69.523438 50 71.316406 50 73.214844 C 50 76.785156 51.246094 80.953125 53.738281 85.714844 L 53.515625 85.660156 L 53.570312 85.714844 C 50.222656 84.1875 47.246094 82.644531 44.644531 81.082031 C 42.039062 79.519531 39.460938 77.660156 36.914062 75.503906 C 34.367188 73.34375 32.253906 71.066406 30.582031 68.667969 C 28.90625 66.265625 27.558594 63.46875 26.535156 60.269531 C 25.511719 57.070312 25 53.644531 25 50 C 25 47.097656 25.457031 44.417969 26.367188 41.964844 C 27.277344 39.507812 28.46875 37.417969 29.9375 35.6875 C 31.40625 33.957031 33.035156 32.320312 34.820312 30.777344 C 36.605469 29.230469 38.394531 27.789062 40.179688 26.449219 C 41.964844 25.113281 43.59375 23.773438 45.0625 22.433594 C 46.53125 21.09375 47.722656 19.578125 48.632812 17.886719 C 49.542969 16.191406 50 14.398438 50 12.5 C 50 9.003906 48.773438 4.835938 46.316406 0 L 46.484375 0.0546875 L 46.429688 0 C 49.777344 1.523438 52.753906 3.070312 55.355469 4.632812 C 57.960938 6.195312 60.539062 8.054688 63.085938 10.210938 C 65.632812 12.371094 67.746094 14.648438 69.417969 17.046875 C 71.09375 19.449219 72.441406 22.246094 73.464844 25.445312 C 74.488281 28.644531 75 32.070312 75 35.714844 Z M 75 35.714844",{
     roughness: s.roughness,
     bowing: s.bowing,
     fill: s.fill,
     fillStyle: s.fillstyle,
     hachureGap: 4,
     fillWeight: 0.5,
     stroke: s.color,
     strokeWidth: s.width});

    ctx.translate(-s.x*100/s.size,-s.y*100/s.size);
    ctx.scale(100/s.size,100/s.size);
}

function drawWater(rc,ctx,s){
  rc.circle(Number(s.x)+0.5*Number(s.size), Number(s.y)+0.5*Number(s.size), 1.3*Number(s.size), {
     roughness: s.roughness,
     bowing: s.bowing,
     fill: "white",
     fillStyle: "solid",
     stroke: s.color,
     strokeWidth: s.width
  });
  ctx.scale(s.size/100,s.size/100);
  ctx.translate(s.x*100/s.size,s.y*100/s.size);
  rc.path("M 54.191406 3.445312 C 51.449219 -1.230469 48.550781 -1.066406 45.808594 3.445312 C 33.234375 22.144531 14.214844 50.191406 14.214844 64.214844 C 14.214844 74.046875 18.246094 83.074219 24.691406 89.523438 C 31.140625 95.96875 40.167969 100 50 100 C 59.832031 100 68.859375 95.96875 75.308594 89.523438 C 81.753906 83.074219 85.785156 74.046875 85.785156 64.214844 C 85.785156 50.03125 66.765625 22.144531 54.191406 3.445312 Z M 75.789062 80.171875 C 73.210938 84.363281 69.503906 88.070312 64.992188 90.652344 C 62.894531 91.777344 60.316406 91.132812 59.1875 89.039062 C 57.898438 86.78125 58.703125 84.203125 60.800781 83.074219 C 64.023438 81.300781 66.601562 78.722656 68.535156 75.660156 C 70.472656 72.597656 71.597656 69.050781 71.761719 65.34375 C 71.921875 62.925781 73.855469 61.152344 76.273438 61.3125 C 78.691406 61.476562 80.464844 63.410156 80.304688 65.828125 C 79.980469 70.984375 78.371094 75.820312 75.789062 80.171875 Z M 75.789062 80.171875",{
     roughness: s.roughness,
     bowing: s.bowing,
     fill: s.fill,
     fillStyle: s.fillstyle,
     hachureGap: 4,
     fillWeight: 0.5,
     stroke: s.color,
     strokeWidth: s.width});

    ctx.translate(-s.x*100/s.size,-s.y*100/s.size);
    ctx.scale(100/s.size,100/s.size);

}

function drawEarth(rc,ctx,s){
  rc.circle(Number(s.x)+0.5*Number(s.size), Number(s.y)+0.5*Number(s.size), 1.3*Number(s.size), {
     roughness: s.roughness,
     bowing: s.bowing,
     fill: "white",
     fillStyle: "solid",
     stroke: s.color,
     strokeWidth: s.width
  });
  ctx.scale(s.size/100,s.size/100);
  ctx.translate(s.x*100/s.size,s.y*100/s.size);
  rc.path("M 41.132812 0.0664062 C 40.144531 0.128906 39.367188 0.277344 38.195312 0.613281 C 36.339844 1.144531 35.363281 1.332031 33.984375 1.410156 C 32.527344 1.496094 32.34375 1.558594 31.070312 2.335938 C 30.582031 2.640625 29.847656 3.03125 29.4375 3.21875 C 28.074219 3.820312 27.035156 4.382812 26.175781 4.992188 C 25.230469 5.664062 24.484375 6.117188 23.332031 6.710938 C 22.46875 7.15625 21.855469 7.664062 21.214844 8.484375 C 20.488281 9.40625 18.472656 12.5625 18.398438 12.890625 C 18.339844 13.179688 17.972656 13.703125 17.085938 14.8125 C 16.878906 15.070312 16.617188 15.523438 16.503906 15.828125 C 16.382812 16.125 16.003906 16.921875 15.648438 17.585938 C 14.984375 18.835938 14.679688 19.5 13.507812 22.113281 C 12.570312 24.191406 12.3125 24.636719 11.621094 25.324219 C 10.316406 26.613281 9.195312 28.238281 8.429688 29.964844 C 7.625 31.769531 7.144531 32.417969 5.25 34.261719 C 4.667969 34.824219 4.035156 35.503906 3.84375 35.785156 C 3.382812 36.441406 2.832031 37.589844 2.558594 38.480469 C 2.171875 39.730469 2.007812 40.097656 1.609375 40.5625 C 0.835938 41.484375 0.457031 42.304688 0.195312 43.632812 C 0.0117188 44.53125 0.0117188 47.929688 0.183594 50.585938 C 0.296875 52.476562 0.386719 54.867188 0.613281 62.300781 C 0.835938 69.597656 0.96875 71.308594 1.476562 72.910156 C 1.996094 74.542969 2.039062 74.941406 2.140625 78.628906 C 2.191406 80.46875 2.285156 82.1875 2.34375 82.429688 C 2.40625 82.679688 2.570312 83.0625 2.703125 83.296875 C 2.894531 83.617188 2.976562 83.929688 3.046875 84.679688 C 3.160156 85.835938 3.3125 86.195312 4.445312 87.90625 C 5.648438 89.75 5.882812 89.96875 7.59375 90.75 C 8.890625 91.34375 9.988281 91.96875 11.925781 93.195312 C 13.527344 94.210938 14.414062 94.71875 15.902344 95.460938 C 16.492188 95.75 17.378906 96.273438 17.871094 96.617188 C 18.550781 97.085938 18.910156 97.28125 19.378906 97.414062 C 19.726562 97.507812 20.816406 97.890625 21.804688 98.261719 C 25.238281 99.558594 28.472656 100.152344 30.867188 99.925781 C 31.589844 99.855469 32.324219 99.855469 33.589844 99.910156 C 35.757812 100.003906 37.453125 99.917969 38.582031 99.652344 C 39.878906 99.339844 40.683594 99.285156 44.902344 99.207031 C 49.175781 99.128906 50.765625 99.042969 52.570312 98.808594 C 54.078125 98.613281 54.871094 98.402344 55.554688 98.011719 C 55.863281 97.835938 56.339844 97.648438 56.625 97.59375 C 57.0625 97.5 60.195312 97.320312 62.691406 97.242188 C 63.457031 97.21875 63.464844 97.210938 66.617188 96 C 71.007812 94.304688 70.96875 94.320312 74.617188 93.96875 C 78.582031 93.59375 79.785156 93.382812 81.957031 92.695312 C 82.4375 92.539062 82.925781 92.414062 83.046875 92.414062 C 83.171875 92.414062 83.507812 92.257812 83.800781 92.0625 C 84.097656 91.867188 84.738281 91.554688 85.230469 91.359375 C 85.71875 91.164062 86.472656 90.789062 86.910156 90.515625 C 88.054688 89.804688 90.480469 88.039062 92.121094 86.710938 C 94.242188 85.007812 94.394531 84.835938 94.660156 83.851562 C 94.75 83.492188 94.984375 82.992188 95.21875 82.648438 C 95.574219 82.125 95.636719 81.960938 95.757812 81.101562 C 95.902344 80.132812 95.902344 80.117188 96.644531 79.046875 C 96.757812 78.898438 96.910156 78.488281 96.992188 78.128906 C 97.144531 77.457031 97.625 76.519531 98.421875 75.339844 C 99.652344 73.503906 99.898438 71.996094 99.929688 66.230469 C 99.949219 62.386719 99.980469 62.589844 99.214844 61.011719 C 98.808594 60.167969 97.796875 58.585938 97.144531 57.773438 C 96.910156 57.476562 96.390625 56.773438 96.003906 56.210938 C 95.179688 55.03125 94.597656 54.421875 93.148438 53.242188 C 91.855469 52.179688 91.183594 51.539062 90.195312 50.429688 C 88.410156 48.4375 86.035156 45.375 85.574219 44.46875 C 85.433594 44.179688 85.128906 43.75 84.902344 43.515625 C 83.691406 42.21875 83.699219 42.242188 83.273438 39.691406 C 82.914062 37.503906 82.710938 36.660156 82.273438 35.667969 C 82.109375 35.277344 81.875 34.535156 81.761719 34.011719 C 81.527344 32.957031 81.324219 32.496094 80.691406 31.644531 C 80.246094 31.042969 80.050781 30.699219 79.265625 29.128906 C 78.65625 27.902344 78.644531 27.832031 78.941406 26.972656 C 79.113281 26.472656 79.164062 26.175781 79.101562 26.027344 C 79.0625 25.910156 78.601562 25.378906 78.09375 24.855469 C 76.789062 23.511719 76.65625 23.324219 76.15625 21.996094 C 76.042969 21.691406 75.738281 21.1875 75.496094 20.867188 C 75.238281 20.546875 74.863281 19.890625 74.660156 19.421875 C 74.453125 18.945312 74.085938 18.195312 73.851562 17.742188 C 73.363281 16.820312 73.261719 16.507812 73.273438 16.085938 C 73.3125 15.34375 71.683594 12.359375 69.570312 9.304688 C 68.023438 7.070312 67.613281 6.585938 66.933594 6.203125 C 65.484375 5.390625 62.761719 4.226562 61.160156 3.75 C 60.203125 3.460938 59.265625 3 57.726562 2.066406 C 55.351562 0.613281 54.035156 0.261719 50.253906 0.0898438 C 48.726562 0.0195312 42.109375 0.00390625 41.132812 0.0664062 Z M 41.132812 0.0664062",{
     roughness: s.roughness,
     bowing: s.bowing,
     fill: s.fill,
     fillStyle: s.fillstyle,
     hachureGap: 4,
     fillWeight: 0.5,
     stroke: s.color,
     strokeWidth: s.width});

    ctx.translate(-s.x*100/s.size,-s.y*100/s.size);
    ctx.scale(100/s.size,100/s.size);
}

function drawAir(rc,ctx,s){
  rc.circle(Number(s.x)+0.5*Number(s.size), Number(s.y)+0.5*Number(s.size), 1.3*Number(s.size), {
     roughness: s.roughness,
     bowing: s.bowing,
     fill: "white",
     fillStyle: "solid",
     stroke: s.color,
     strokeWidth: s.width
  });
  ctx.scale(s.size/100,s.size/100);
  ctx.translate(s.x*100/s.size,s.y*100/s.size);
  rc.path("M 75.746094 73.992188 C 75.746094 80.011719 70.875 84.894531 64.855469 84.894531 C 58.832031 84.894531 53.957031 80.011719 53.957031 73.992188 C 53.957031 71.863281 54.589844 69.898438 55.640625 68.222656 L 4.167969 68.222656 C 2.75 68.222656 1.601562 67.074219 1.601562 65.65625 C 1.601562 64.238281 2.753906 63.089844 4.167969 63.089844 L 65.066406 63.089844 C 65.144531 63.089844 65.207031 63.132812 65.277344 63.136719 C 71.09375 63.371094 75.746094 68.125 75.746094 73.992188 Z M 2.5625 36.8125 L 50.082031 36.8125 C 50.378906 36.839844 50.660156 36.902344 50.960938 36.902344 C 56.984375 36.902344 61.859375 32.023438 61.859375 26.003906 C 61.859375 19.984375 56.984375 15.105469 50.960938 15.105469 C 44.941406 15.105469 40.0625 19.984375 40.0625 26.003906 C 40.0625 28.097656 40.683594 30.027344 41.703125 31.6875 L 2.5625 31.6875 C 1.148438 31.6875 0 32.835938 0 34.25 C 0 35.667969 1.148438 36.8125 2.5625 36.8125 Z M 89.105469 31.683594 C 83.082031 31.683594 78.207031 36.5625 78.207031 42.582031 C 78.207031 44.710938 78.839844 46.675781 79.890625 48.351562 L 2.777344 48.351562 C 1.363281 48.351562 0.214844 49.496094 0.214844 50.917969 C 0.214844 52.335938 1.359375 53.480469 2.777344 53.480469 L 89.316406 53.480469 C 89.390625 53.480469 89.453125 53.445312 89.53125 53.4375 C 95.347656 53.207031 100.003906 48.453125 100.003906 42.582031 C 100 36.566406 95.125 31.683594 89.105469 31.683594 Z M 89.105469 31.683594",{
     roughness: s.roughness,
     bowing: s.bowing,
     fill: s.fill,
     fillStyle: s.fillstyle,
     hachureGap: 4,
     fillWeight: 0.5,
     stroke: s.color,
     strokeWidth: s.width});

    ctx.translate(-s.x*100/s.size,-s.y*100/s.size);
    ctx.scale(100/s.size,100/s.size);
}


function drawEdge(rc, s) {
   rc.line(Number(s.x), Number(s.y), Number(s.xend),Number(s.yend),{
     roughness: s.roughness,
     bowing: s.bowing,
     stroke: s.color,
     strokeWidth: s.width
   });
}

HTMLWidgets.widget({

  name: 'roughnet',

  type: 'output',

  factory: function(el, width, height) {

    return {
      renderValue: function(x) {

        // Create Canvas element in DOM
        var canvas = document.createElement("canvas");
        canvas.setAttribute("id", "canvas");
        canvas.setAttribute("width", width);
        canvas.setAttribute("height", height);
        el.appendChild(canvas);

        // Insert rough canvas in the new canvas element
        const rc = rough.canvas(document.getElementById("canvas"));

        // Create context for text shape
        const c = document.getElementById("canvas");
        var ctx = c.getContext("2d");
//          ctx.textAlign = "center";
//          ctx.textBaseline = "middle";

        x.data.map(function(s) {
          if (s.shape === "rectangle") {
            drawRect(rc, s);
          }
          if(s.shape === "circle"){
            drawCirc(rc,s);
          }
          if(s.shape==="heart"){
            drawHeart(rc,ctx,s);
          }
          if(s.shape==="fire"){
            drawFire(rc,ctx,s);
          }
          if(s.shape==="water"){
            drawWater(rc,ctx,s);
          }
          if(s.shape==="earth"){
            drawEarth(rc,ctx,s);
          }
          if(s.shape==="air"){
            drawAir(rc,ctx,s);
          }

          if(s.shape === "edge"){
            drawEdge(rc,s);
          }

        });
      },
      resize: function(width, height) {
        // TODO
      }
    };
  }
});
